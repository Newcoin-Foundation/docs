"use strict";(self.webpackChunkdocs_2=self.webpackChunkdocs_2||[]).push([[8513],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var o=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,o,r=function(e,t){if(null==e)return{};var n,o,r={},a=Object.keys(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(o=0;o<a.length;o++)n=a[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=o.createContext({}),s=function(e){var t=o.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},u=function(e){var t=s(e.components);return o.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},p=o.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),p=s(n),m=r,f=p["".concat(c,".").concat(m)]||p[m]||d[m]||a;return n?o.createElement(f,l(l({ref:t},u),{},{components:n})):o.createElement(f,l({ref:t},u))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,l=new Array(a);l[0]=p;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:r,l[1]=i;for(var s=2;s<a;s++)l[s]=n[s];return o.createElement.apply(null,l)}return o.createElement.apply(null,n)}p.displayName="MDXCreateElement"},7442:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>s});var o=n(7462),r=(n(7294),n(3905));const a={sidebar_position:22},l=void 0,i={unversionedId:"Smart Contracts/NRC-22 MainPool",id:"Smart Contracts/NRC-22 MainPool",title:"NRC-22 MainPool",description:"GPool contract swaps $NCO for Governance NCO with a ticker $GNCO, locks $NCO and distributes fees automatically according to the stake fee distribution structure. $GNCO tokens are minted after the lock and are burned when $NCO is unlocked and recovered by the owner.",source:"@site/docs/Smart Contracts/NRC-22 MainPool.md",sourceDirName:"Smart Contracts",slug:"/Smart Contracts/NRC-22 MainPool",permalink:"/docs/docs/Smart Contracts/NRC-22 MainPool",draft:!1,editUrl:"https://github.com/Newcoin-Foundation/docs/tree/main/packages/docs/Smart Contracts/NRC-22 MainPool.md",tags:[],version:"current",sidebarPosition:22,frontMatter:{sidebar_position:22},sidebar:"tutorialSidebar",previous:{title:"How to add a Smart Contract",permalink:"/docs/docs/Smart Contracts/How to add a Smart Contract"},next:{title:"NRC-23 SubPool",permalink:"/docs/docs/Smart Contracts/NRC-23 SubPool"}},c={},s=[{value:"Staking",id:"staking",level:2},{value:"Stake to the GPool",id:"stake-to-the-gpool",level:3},{value:"Unstake instantly from the GPool",id:"unstake-instantly-from-the-gpool",level:3},{value:"Delayed unstake from the GPool",id:"delayed-unstake-from-the-gpool",level:3},{value:"Redeem a delayed unstake from the GPool",id:"redeem-a-delayed-unstake-from-the-gpool",level:3},{value:"Account management in the GPool",id:"account-management-in-the-gpool",level:2},{value:"open",id:"open",level:3},{value:"close",id:"close",level:3}],u={toc:s};function d(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,o.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"GPool contract swaps $NCO for Governance NCO with a ticker $GNCO, locks $NCO and distributes fees automatically according to the stake fee distribution structure. $GNCO tokens are minted after the lock and are burned when $NCO is unlocked and recovered by the owner. "),(0,r.kt)("h1",{id:"gpool-actions"},"GPool Actions"),(0,r.kt)("p",null,"All GPool actions can be found in the ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Newcoin-Foundation/newcoin.pool-js"},"NewApi.pool-js SDK")),(0,r.kt)("h2",{id:"staking"},"Staking"),(0,r.kt)("h3",{id:"stake-to-the-gpool"},"Stake to the GPool"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Javascript"}," function stake (from, quantity){\n    ...\n }\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Requires: Account, Errors: ?"),"Requires: Authorization from Account Errors:"),(0,r.kt)("h3",{id:"unstake-instantly-from-the-gpool"},"Unstake instantly from the GPool"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Javascript"}," function instunstake (from, quantity){\n    ...\n }\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Requires: Account, Errors: ?"),"Requires: Authorization from Account Errors:"),(0,r.kt)("h3",{id:"delayed-unstake-from-the-gpool"},"Delayed unstake from the GPool"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Javascript"}," function dldunstake (from, quantity){\n    ...\n }\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Requires: Account, Errors: ?"),"Requires: Authorization from Account Errors:"),(0,r.kt)("h3",{id:"redeem-a-delayed-unstake-from-the-gpool"},"Redeem a delayed unstake from the GPool"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Javascript"}," function redeem (from, id){\n    ...\n }\n")),(0,r.kt)("details",null,(0,r.kt)("summary",null,"Requires: Account, Errors: ?"),"Requires: Authorization from Account Errors:"),(0,r.kt)("h2",{id:"account-management-in-the-gpool"},"Account management in the GPool"),(0,r.kt)("h3",{id:"open"},"open"),(0,r.kt)("p",null,"Creates 0 balance account in balances table. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Javascript"}," function open (owner, symbol, payer){\n    ...\n }\n")),(0,r.kt)("h3",{id:"close"},"close"),(0,r.kt)("p",null,"Closes 0 balance account in balances table. "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-Javascript"}," function close (owner, symbol){\n    ...\n }\n")))}d.isMDXComponent=!0}}]);