"use strict";(self.webpackChunkdocs_2=self.webpackChunkdocs_2||[]).push([[1829],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=a,f=d["".concat(c,".").concat(m)]||d[m]||p[m]||o;return n?r.createElement(f,i(i({ref:t},u),{},{components:n})):r.createElement(f,i({ref:t},u))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5547:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:15},i=void 0,l={unversionedId:"Smart Contracts/NRC-4 MainPool",id:"Smart Contracts/NRC-4 MainPool",title:"NRC-4 MainPool",description:"MainPool contract swaps $NCO for Governance NCO with a ticker $GNCO, locks $NCO and distributes fees automatically according to the stake fee distribution structure. $GNCO tokens are minted after the lock and are burned when $NCO is unlocked and recovered by the owner.",source:"@site/docs/Smart Contracts/NRC-4 MainPool.md",sourceDirName:"Smart Contracts",slug:"/Smart Contracts/NRC-4 MainPool",permalink:"/docs/docs/Smart Contracts/NRC-4 MainPool",draft:!1,editUrl:"https://github.com/Newcoin-Foundation/docs/tree/main/packages/docs/Smart Contracts/NRC-4 MainPool.md",tags:[],version:"current",sidebarPosition:15,frontMatter:{sidebar_position:15},sidebar:"tutorialSidebar",previous:{title:"NRC-3 Socializer",permalink:"/docs/docs/Smart Contracts/NRC-3 Socializer"},next:{title:"NRC-5 MainDAO",permalink:"/docs/docs/Smart Contracts/NRC-5 MainDAO"}},c={},s=[{value:"Staking",id:"staking",level:2},{value:"Stake to the MainPool",id:"stake-to-the-mainpool",level:3},{value:"Unstake instantly from the MainPool",id:"unstake-instantly-from-the-mainpool",level:3},{value:"Delayed unstake from the MainPool",id:"delayed-unstake-from-the-mainpool",level:3},{value:"Redeem a delayed unstake from the MainPool",id:"redeem-a-delayed-unstake-from-the-mainpool",level:3},{value:"Accounts",id:"accounts",level:2},{value:"open",id:"open",level:3},{value:"open",id:"open-1",level:3}],u={toc:s};function p(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"MainPool contract swaps $NCO for Governance NCO with a ticker $GNCO, locks $NCO and distributes fees automatically according to the stake fee distribution structure. $GNCO tokens are minted after the lock and are burned when $NCO is unlocked and recovered by the owner. "),(0,a.kt)("h1",{id:"mainpool-actions"},"MainPool Actions"),(0,a.kt)("p",null,"All MainPool actions can be found in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/Newcoin-Foundation/newcoin.pool-js"},"NewApi.pool-js SDK")),(0,a.kt)("h2",{id:"staking"},"Staking"),(0,a.kt)("h3",{id:"stake-to-the-mainpool"},"Stake to the MainPool"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Javascript"}," function stake (from, quantity){\n    ...\n }\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Requires: Account, Errors: ?"),"Requires: Authorization from Account Errors:"),(0,a.kt)("h3",{id:"unstake-instantly-from-the-mainpool"},"Unstake instantly from the MainPool"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Javascript"}," function instunstake (from, quantity){\n    ...\n }\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Requires: Account, Errors: ?"),"Requires: Authorization from Account Errors:"),(0,a.kt)("h3",{id:"delayed-unstake-from-the-mainpool"},"Delayed unstake from the MainPool"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Javascript"}," function dldunstake (from, quantity){\n    ...\n }\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Requires: Account, Errors: ?"),"Requires: Authorization from Account Errors:"),(0,a.kt)("h3",{id:"redeem-a-delayed-unstake-from-the-mainpool"},"Redeem a delayed unstake from the MainPool"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Javascript"}," function redeem (from, id){\n    ...\n }\n")),(0,a.kt)("details",null,(0,a.kt)("summary",null,"Requires: Account, Errors: ?"),"Requires: Authorization from Account Errors:"),(0,a.kt)("h2",{id:"accounts"},"Accounts"),(0,a.kt)("h3",{id:"open"},"open"),(0,a.kt)("p",null,"Creates 0 balance account in balances table. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Javascript"}," function open (owner, symbol, payer){\n    ...\n }\n")),(0,a.kt)("h3",{id:"open-1"},"open"),(0,a.kt)("p",null,"Creates 0 balance account in balances table. "),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-Javascript"}," function close (owner, symbol){\n    ...\n }\n")))}p.isMDXComponent=!0}}]);