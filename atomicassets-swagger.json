{
  "swaggerDoc": {
    "openapi": "3.0.0",
    "info": {
      "description": "### Newcoin Contract API\n*Made with ♥️ by Newfoundation and  [pink.gg](https://pink.gg/)*\n#### Current Chain: dev-public\n#### Provided by: [Newstack](https://www.newstack.dev)",
      "version": "1.3.21",
      "title": "Newcoin Contract API"
    },
    "servers": [
      {
        "url": "https://atomic-nefty-devnet.newcoin.org"
      },
      {
        "url": "https://atomic-nefty-devnet.newcoin.org"
      }
    ],
    "tags": [
      {
        "name": "assets",
        "description": "Assets"
      },
      {
        "name": "assets",
        "description": "Assets"
      },
      {
        "name": "collections",
        "description": "Collections"
      },
      {
        "name": "schemas",
        "description": "Schemas"
      },
      {
        "name": "templates",
        "description": "Templates"
      },
      {
        "name": "offers",
        "description": "Offers"
      },
      {
        "name": "transfers",
        "description": "Transfers"
      },
      {
        "name": "accounts",
        "description": "Accounts"
      },
      {
        "name": "burns",
        "description": "Burns"
      },
      {
        "name": "config",
        "description": "Config"
      },
      {
        "name": "neftymarket",
        "description": "NeftyMarket"
      },
      {
        "name": "auctions",
        "description": "Auctions"
      },
      {
        "name": "stats",
        "description": "Stats"
      },
      {
        "name": "assets",
        "description": "Assets"
      },
      {
        "name": "pricing",
        "description": "Pricing"
      },
      {
        "name": "config",
        "description": "Config"
      },
      {
        "name": "drops",
        "description": "Drops"
      },
      {
        "name": "stats",
        "description": "Stats"
      },
      {
        "name": "mining",
        "description": "Liquidity Mining"
      }
    ],
    "paths": {
      "/atomicassets/v1/assets": {
        "get": {
          "tags": ["assets"],
          "summary": "Fetch assets.",
          "description": "You can filter the result by specific asset / template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
          "parameters": [
            {
              "name": "collection_name",
              "in": "query",
              "description": "Filter by collection name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Filter by schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Filter by template id",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "burned",
              "in": "query",
              "description": "Filter for burned assets",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "owner",
              "in": "query",
              "description": "Filter by owner",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match",
              "in": "query",
              "description": "Search for input in asset name on template data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Fuzzy search for input in asset name on template data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_immutable_name",
              "in": "query",
              "description": "Search for input in asset name on asset immutable data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_mutable_name",
              "in": "query",
              "description": "Search for input in asset name on asset mutable data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "is_transferable",
              "in": "query",
              "description": "Check if asset is transferable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "is_burnable",
              "in": "query",
              "description": "Check if asset is burnable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "only_duplicate_templates",
              "in": "query",
              "description": "Show only duplicate assets grouped by template",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "has_backed_tokens",
              "in": "query",
              "description": "Show only assets that are backed by a token",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "authorized_account",
              "in": "query",
              "description": "Filter for assets the provided account can edit. ",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_whitelist",
              "in": "query",
              "description": "Filter for multiple template ids split by \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_blacklist",
              "in": "query",
              "description": "Dont include specific template ids split by \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hide_templates_by_accounts",
              "in": "query",
              "description": "Dont templates that are owned by an account",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hide_offers",
              "in": "query",
              "description": "Hide assets which are used in an offer",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "asset_id",
                  "minted",
                  "updated",
                  "transferred",
                  "template_mint",
                  "name"
                ],
                "default": "asset_id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Asset"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/assets/{asset_id}": {
        "get": {
          "tags": ["assets"],
          "summary": "Fetch asset by id",
          "parameters": [
            {
              "name": "asset_id",
              "in": "path",
              "description": "ID of asset",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/Asset"
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "416": {
              "description": "Element not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/assets/{asset_id}/stats": {
        "get": {
          "tags": ["assets"],
          "summary": "Fetch asset stats",
          "parameters": [
            {
              "name": "asset_id",
              "in": "path",
              "description": "ID of asset",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "template_mint": {
                            "type": "integer"
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/assets/{asset_id}/logs": {
        "get": {
          "tags": ["assets"],
          "summary": "Fetch asset logs",
          "parameters": [
            {
              "name": "asset_id",
              "in": "path",
              "description": "ID of asset",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "action_whitelist",
              "in": "query",
              "description": "Action whitelist",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "action_blacklist",
              "in": "query",
              "description": "Action blacklist",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Log"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/collections": {
        "get": {
          "tags": ["collections"],
          "summary": "Fetch collections",
          "parameters": [
            {
              "name": "author",
              "in": "query",
              "description": "Get collections by author",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match",
              "in": "query",
              "description": "Search for input in collection name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "authorized_account",
              "in": "query",
              "description": "Filter for collections which the provided account can use to create assets",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "notify_account",
              "in": "query",
              "description": "Filter for collections where the provided account is notified",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["created", "collection_name"],
                "default": "created"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Collection"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/collections/{collection_name}": {
        "get": {
          "tags": ["collections"],
          "summary": "Find collection by its name",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Name of collection",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/Collection"
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "416": {
              "description": "Element not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/collections/{collection_name}/stats": {
        "get": {
          "tags": ["collections"],
          "summary": "Get stats about collection",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Name of collection",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "assets": {
                            "type": "string"
                          },
                          "burned": {
                            "type": "string"
                          },
                          "templates": {
                            "type": "string"
                          },
                          "schemas": {
                            "type": "string"
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/collections/{collection_name}/logs": {
        "get": {
          "tags": ["collections"],
          "summary": "Fetch collection logs",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Name of collection",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "action_whitelist",
              "in": "query",
              "description": "Action whitelist",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "action_blacklist",
              "in": "query",
              "description": "Action blacklist",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Log"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/schemas": {
        "get": {
          "tags": ["schemas"],
          "summary": "Fetch schemas",
          "parameters": [
            {
              "name": "collection_name",
              "in": "query",
              "description": "Get all schemas within the collection",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "authorized_account",
              "in": "query",
              "description": "Filter for schemas the provided account can edit",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match",
              "in": "query",
              "description": "Search for input in schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["created", "schema_name"],
                "default": "created"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Schema"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/schemas/{collection_name}/{schema_name}": {
        "get": {
          "tags": ["schemas"],
          "summary": "Find schema by schema_name",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Collection name of schema",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "path",
              "description": "Name of schema",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/Schema"
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "416": {
              "description": "Element not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/schemas/{collection_name}/{schema_name}/stats": {
        "get": {
          "tags": ["schemas"],
          "summary": "Get stats about a specific schema",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Collection name of schema",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "path",
              "description": "Name of schema",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "assets": {
                            "type": "string"
                          },
                          "burned": {
                            "type": "string"
                          },
                          "templates": {
                            "type": "string"
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/schemas/{collection_name}/{schema_name}/logs": {
        "get": {
          "tags": ["schemas"],
          "summary": "Fetch schema logs",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Collection name of schema",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "path",
              "description": "Name of schema",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "action_whitelist",
              "in": "query",
              "description": "Action whitelist",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "action_blacklist",
              "in": "query",
              "description": "Action blacklist",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Log"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/templates": {
        "get": {
          "tags": ["templates"],
          "summary": "Fetch templates.",
          "description": "You can filter the result by specific asset / template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
          "parameters": [
            {
              "name": "collection_name",
              "in": "query",
              "description": "Get all templates within the collection",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Get all templates which implement that schema",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "issued_supply",
              "in": "query",
              "description": "Filter by issued supply",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "min_issued_supply",
              "in": "query",
              "description": "Filter by issued supply",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "max_issued_supply",
              "in": "query",
              "description": "Filter by issued supply",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "has_assets",
              "in": "query",
              "description": "Only show templates with existing supply > 0",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "max_supply",
              "in": "query",
              "description": "Filter by max supply",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "is_burnable",
              "in": "query",
              "description": "Filter by burnable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "is_transferable",
              "in": "query",
              "description": "Filter by transferable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "authorized_account",
              "in": "query",
              "description": "Filter for templates the provided account can use",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match",
              "in": "query",
              "description": "Search for template id or",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["name", "created"],
                "default": "created"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Template"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/templates/{collection_name}/{template_id}": {
        "get": {
          "tags": ["templates"],
          "summary": "Find template by id",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Name of collection",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "path",
              "description": "ID of template",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/Template"
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "416": {
              "description": "Element not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/templates/{collection_name}/{template_id}/stats": {
        "get": {
          "tags": ["templates"],
          "summary": "Get stats about a specific template",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Name of collection",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "path",
              "description": "ID of template",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "assets": {
                            "type": "string"
                          },
                          "burned": {
                            "type": "string"
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/templates/{collection_name}/{template_id}/logs": {
        "get": {
          "tags": ["templates"],
          "summary": "Fetch template logs",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Name of collection",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "path",
              "description": "ID of template",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "action_whitelist",
              "in": "query",
              "description": "Action whitelist",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "action_blacklist",
              "in": "query",
              "description": "Action blacklist",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Log"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/offers": {
        "get": {
          "tags": ["offers"],
          "summary": "Fetch offers",
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "description": "Notified account (can be sender or recipient) - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sender",
              "in": "query",
              "description": "Offer sender - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "recipient",
              "in": "query",
              "description": "Offer recipient - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "memo",
              "in": "query",
              "description": "Search for exact memo",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_memo",
              "in": "query",
              "description": "Search for text in memo",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "state",
              "in": "query",
              "description": "Filter by Offer State (0: PENDING - Offer created and valid, 1: INVALID - Assets are missing because ownership has changed, 2: UNKNOWN - Offer is not valid anymore, 3: ACCEPTED - Offer was accepted, 4: DECLINED - Offer was declined by recipient, 5: CANCELLED - Offer was canceled by sender) - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "is_recipient_contract",
              "in": "query",
              "description": "Filter offers where recipient is a contract",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "asset_id",
              "in": "query",
              "description": "only offers which contain this asset_id - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "only offers which contain assets of this template - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "only offers which contain assets of this schema - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_name",
              "in": "query",
              "description": "only offers which contain assets of this collection - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "account_whitelist",
              "in": "query",
              "description": "Only offers which are sent by one of these accounts",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "account_blacklist",
              "in": "query",
              "description": "Exclude offers which are sent by one of these accounts",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sender_asset_whitelist",
              "in": "query",
              "description": "Only offers which contain these assets",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sender_asset_blacklist",
              "in": "query",
              "description": "Exclude offers which contain these assets",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "recipient_asset_whitelist",
              "in": "query",
              "description": "Only offers which contain these assets",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "recipient_asset_blacklist",
              "in": "query",
              "description": "Exclude offers which contain these assets",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hide_contracts",
              "in": "query",
              "description": "dont show offers from or to accounts that have code deployed",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "hide_empty_offers",
              "in": "query",
              "description": "dont show offers where one side is empty",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["created", "updated"],
                "default": "created"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Offer"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/offers/{offer_id}": {
        "get": {
          "tags": ["offers"],
          "summary": "Find offer by id",
          "parameters": [
            {
              "name": "offer_id",
              "in": "path",
              "description": "ID of offer",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/Offer"
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "416": {
              "description": "Element not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/offers/{offer_id}/logs": {
        "get": {
          "tags": ["offers"],
          "summary": "Fetch offer logs",
          "parameters": [
            {
              "name": "offer_id",
              "in": "path",
              "description": "ID of offer",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "action_whitelist",
              "in": "query",
              "description": "Action whitelist",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "action_blacklist",
              "in": "query",
              "description": "Action blacklist",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Log"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/transfers": {
        "get": {
          "tags": ["transfers"],
          "summary": "Fetch transfers",
          "parameters": [
            {
              "name": "account",
              "in": "query",
              "description": "Notified account (can be sender or recipient) - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "sender",
              "in": "query",
              "description": "Transfer sender - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "recipient",
              "in": "query",
              "description": "Transfer recipient - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "memo",
              "in": "query",
              "description": "Search for exact memo",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_memo",
              "in": "query",
              "description": "Search for text in memo",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "asset_id",
              "in": "query",
              "description": "only transfers which contain this asset_id - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "only transfers which contain assets of this template - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "only transfers which contain assets of this schema - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_name",
              "in": "query",
              "description": "only transfers which contain assets of this collection - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hide_contracts",
              "in": "query",
              "description": "dont show transfers from or to accounts that have code deployed",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["created"],
                "default": "created"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Transfer"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/accounts": {
        "get": {
          "tags": ["accounts"],
          "summary": "Get accounts which own atomicassets NFTs",
          "parameters": [
            {
              "name": "match_owner",
              "in": "query",
              "description": "Search for partial account name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_name",
              "in": "query",
              "description": "Filter by collection name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Filter by schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Filter by template id",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "burned",
              "in": "query",
              "description": "Filter for burned assets",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "hide_offers",
              "in": "query",
              "description": "Hide assets which are used in an offer",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "string"
                            },
                            "assets": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/accounts/{account}": {
        "get": {
          "tags": ["accounts"],
          "summary": "Get a specific account stats",
          "parameters": [
            {
              "name": "account",
              "in": "path",
              "description": "Account name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hide_offers",
              "in": "query",
              "description": "Hide assets which are used in an offer",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "collections": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "collection": {
                                    "$ref": "#/components/schemas/Collection"
                                  },
                                  "assets": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "templates": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "template_id": {
                                    "type": "string"
                                  },
                                  "assets": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "assets": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/accounts/{account}/{collection_name}": {
        "get": {
          "tags": ["accounts"],
          "summary": "Retrieves the template and schema count for the given account and collection name",
          "parameters": [
            {
              "name": "account",
              "in": "path",
              "description": "Account name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_name",
              "in": "path",
              "description": "Collection Name",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "templates": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "template_id": {
                                    "type": "string"
                                  },
                                  "assets": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "schemas": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "schema_name": {
                                    "type": "string"
                                  },
                                  "assets": {
                                    "type": "string"
                                  }
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/burns": {
        "get": {
          "tags": ["burns"],
          "summary": "Get accounts which own atomicassets NFTs",
          "parameters": [
            {
              "name": "match_owner",
              "in": "query",
              "description": "Search for partial account name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_name",
              "in": "query",
              "description": "Filter by collection name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Filter by schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Filter by template id",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "burned",
              "in": "query",
              "description": "Filter for burned assets",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "account": {
                              "type": "string"
                            },
                            "assets": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/burns/{account}": {
        "get": {
          "tags": ["burns"],
          "summary": "Get a specific account",
          "parameters": [
            {
              "name": "account",
              "in": "path",
              "description": "Account name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hide_offers",
              "in": "query",
              "description": "Hide assets which are used in an offer",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "collections": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "collection_name": {
                                    "type": "string"
                                  },
                                  "assets": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "templates": {
                              "type": "array",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "collection_name": {
                                    "type": "string"
                                  },
                                  "template_id": {
                                    "type": "string"
                                  },
                                  "assets": {
                                    "type": "string"
                                  }
                                }
                              }
                            },
                            "assets": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/atomicassets/v1/config": {
        "get": {
          "tags": ["config"],
          "summary": "Get general information about the API and the connected contract",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "contract": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          },
                          "collection_format": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "name": {
                                  "type": "string"
                                },
                                "type": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "supported_tokens": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "token_contract": {
                                  "type": "string"
                                },
                                "token_symbol": {
                                  "type": "string"
                                },
                                "token_precision": {
                                  "type": "integer"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/schemas/{collection_name}/attribute_value_filters": {
        "get": {
          "tags": ["neftymarket"],
          "summary": "Get unique (attribute_name, attribute_value) pairs",
          "description": "Get every unique (attribute_name, attribute_value) pairsin all the templates of a collection and schema",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Collection name of schema",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Name of schema",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "attribute_names",
              "in": "query",
              "description": "Attributes to group separated by commas",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/AttributeValueFilter"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/auctions": {
        "get": {
          "tags": ["auctions"],
          "summary": "Get all auctions.",
          "description": "You can filter the result by specific asset / template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
          "parameters": [
            {
              "name": "state",
              "in": "query",
              "description": "Filter by auction state (0: WAITING - Auction not yet started, 1: LISTED - Auction pending and open to bids, 2: CANCELED - Auction was canceled, 3: SOLD - Auction has been sold, 4: INVALID - Auction ended but no bid was made) - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "type",
              "in": "query",
              "description": "Filter by auction type (0: ENGLISH - Actions that go up on price, 1: DUTCH - Auctions thatt go down in price ) - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "bidder",
              "in": "query",
              "description": "Filter by auctions with this bidder",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "participant",
              "in": "query",
              "description": "Filter by auctions where this account participated and can still claim / bid",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hide_empty_auctions",
              "in": "query",
              "description": "Hide auctions with no bids",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "show_buy_now_only",
              "in": "query",
              "description": "Show auctions with buy now option",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "max_assets",
              "in": "query",
              "description": "Max assets per listing",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "min_assets",
              "in": "query",
              "description": "Min assets per listing",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "show_seller_contracts",
              "in": "query",
              "description": "If false no seller contracts are shown except if they are in the contract whitelist",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "contract_whitelist",
              "in": "query",
              "description": "Show these accounts even if they are contracts",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "seller_blacklist",
              "in": "query",
              "description": "Dont show listings from these sellers (Split multiple with \",\")",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "buyer_blacklist",
              "in": "query",
              "description": "Dont show listings from these buyers (Split multiple with \",\")",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "asset_id",
              "in": "query",
              "description": "Asset id in the offer",
              "required": false,
              "schema": {
                "type": "int"
              }
            },
            {
              "name": "marketplace",
              "in": "query",
              "description": "Filter by all sales where a certain marketplace is either taker or maker marketplace - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "maker_marketplace",
              "in": "query",
              "description": "Maker marketplace - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "taker_marketplace",
              "in": "query",
              "description": "Taker marketplace - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "symbol",
              "in": "query",
              "description": "Filter by symbol",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "account",
              "in": "query",
              "description": "Filter accounts that are either seller or buyer",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "seller",
              "in": "query",
              "description": "Filter by seller - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "buyer",
              "in": "query",
              "description": "Filter by buyer - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "min_price",
              "in": "query",
              "description": "Lower price limit",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "max_price",
              "in": "query",
              "description": "Upper price limit",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "min_template_mint",
              "in": "query",
              "description": "Min template mint",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "max_template_mint",
              "in": "query",
              "description": "Max template mint",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "min_buy_now_price",
              "in": "query",
              "description": "Buy now lower price limit",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "max_buy_now_price",
              "in": "query",
              "description": "Buy now upper price limit",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "collection_name",
              "in": "query",
              "description": "Filter by collection name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Filter by schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Filter by template id",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "burned",
              "in": "query",
              "description": "Filter for burned assets",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "owner",
              "in": "query",
              "description": "Filter by owner",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match",
              "in": "query",
              "description": "Search for input in asset name on template data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Fuzzy search for input in asset name on template data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_immutable_name",
              "in": "query",
              "description": "Search for input in asset name on asset immutable data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_mutable_name",
              "in": "query",
              "description": "Search for input in asset name on asset mutable data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "is_transferable",
              "in": "query",
              "description": "Check if asset is transferable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "is_burnable",
              "in": "query",
              "description": "Check if asset is burnable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "updated",
                  "starting",
                  "ending",
                  "auction_id",
                  "price",
                  "buy_now_price",
                  "template_mint"
                ],
                "default": "created"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Auction"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/auctions/{auction_id}": {
        "get": {
          "tags": ["auctions"],
          "summary": "Get a specific auction by id",
          "parameters": [
            {
              "in": "path",
              "name": "auction_id",
              "description": "Auction Id",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/Auction"
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "416": {
              "description": "Element not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/auctions/{auction_id}/logs": {
        "get": {
          "tags": ["auctions"],
          "summary": "Fetch auction logs",
          "parameters": [
            {
              "name": "auction_id",
              "in": "path",
              "description": "ID of auction",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "action_whitelist",
              "in": "query",
              "description": "Action whitelist",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "action_blacklist",
              "in": "query",
              "description": "Action blacklist",
              "required": false,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Log"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/stats/collections": {
        "get": {
          "tags": ["stats"],
          "summary": "Get market collections sorted by volume or listings",
          "parameters": [
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Perform a collection search",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["volume", "listings"],
                "default": "volume"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "contract": {
                                  "type": "string"
                                },
                                "collection_name": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "author": {
                                  "type": "string"
                                },
                                "allow_notify": {
                                  "type": "boolean"
                                },
                                "authorized_accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "notify_accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "market_fee": {
                                  "type": "number"
                                },
                                "data": {
                                  "type": "object"
                                },
                                "created_at_block": {
                                  "type": "string"
                                },
                                "created_at_time": {
                                  "type": "string"
                                },
                                "listings": {
                                  "type": "string"
                                },
                                "volume": {
                                  "type": "string"
                                },
                                "sales": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/stats/collections/{collection_name}": {
        "get": {
          "tags": ["stats"],
          "summary": "Get market collections sorted by volume or listings",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Collection Name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "contract": {
                                  "type": "string"
                                },
                                "collection_name": {
                                  "type": "string"
                                },
                                "name": {
                                  "type": "string"
                                },
                                "author": {
                                  "type": "string"
                                },
                                "allow_notify": {
                                  "type": "boolean"
                                },
                                "authorized_accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "notify_accounts": {
                                  "type": "array",
                                  "items": {
                                    "type": "string"
                                  }
                                },
                                "market_fee": {
                                  "type": "number"
                                },
                                "data": {
                                  "type": "object"
                                },
                                "created_at_block": {
                                  "type": "string"
                                },
                                "created_at_time": {
                                  "type": "string"
                                },
                                "listings": {
                                  "type": "string"
                                },
                                "volume": {
                                  "type": "string"
                                },
                                "sales": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/stats/accounts": {
        "get": {
          "tags": ["stats"],
          "summary": "Get market collections sorted by volume or listings",
          "parameters": [
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["buy_volume", "sell_volume"],
                "default": "buy_volume"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "account": {
                                  "type": "string"
                                },
                                "buy_volume": {
                                  "type": "string"
                                },
                                "sell_volume": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/stats/accounts/{account}": {
        "get": {
          "tags": ["stats"],
          "summary": "Get market collections sorted by volume or listings",
          "parameters": [
            {
              "name": "account",
              "in": "path",
              "description": "Account Name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "result": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "account": {
                                  "type": "string"
                                },
                                "buy_volume": {
                                  "type": "string"
                                },
                                "sell_volume": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/stats/schemas/{collection_name}": {
        "get": {
          "tags": ["stats"],
          "summary": "Get market schemas sorted by volume or listings",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Collection Name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["volume", "listings"],
                "default": "volume"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "schema_name": {
                                  "type": "string"
                                },
                                "listings": {
                                  "type": "string"
                                },
                                "volume": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/stats/templates": {
        "get": {
          "tags": ["stats"],
          "summary": "Get templates ordered by market activity",
          "parameters": [
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Perform a collection search",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_name",
              "in": "query",
              "description": "Collection Name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Schema Name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Template Id",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["volume", "sales"],
                "default": "volume"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "template": {
                                  "type": "object",
                                  "properties": {
                                    "contract": {
                                      "type": "string"
                                    },
                                    "template_id": {
                                      "type": "string"
                                    },
                                    "max_supply": {
                                      "type": "string"
                                    },
                                    "issued_supply": {
                                      "type": "string"
                                    },
                                    "is_transferable": {
                                      "type": "boolean"
                                    },
                                    "is_burnable": {
                                      "type": "boolean"
                                    },
                                    "immutable_data": {
                                      "type": "object"
                                    },
                                    "created_at_time": {
                                      "type": "string"
                                    },
                                    "created_at_block": {
                                      "type": "string"
                                    },
                                    "scheme": {
                                      "type": "object",
                                      "properties": {
                                        "schema_name": {
                                          "type": "string"
                                        },
                                        "format": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "name": {
                                                "type": "string"
                                              },
                                              "type": {
                                                "type": "string"
                                              }
                                            }
                                          }
                                        },
                                        "created_at_block": {
                                          "type": "string"
                                        },
                                        "created_at_time": {
                                          "type": "string"
                                        }
                                      }
                                    },
                                    "collection": {
                                      "type": "object",
                                      "properties": {
                                        "collection_name": {
                                          "type": "string"
                                        },
                                        "name": {
                                          "type": "string"
                                        },
                                        "author": {
                                          "type": "string"
                                        },
                                        "allow_notify": {
                                          "type": "boolean"
                                        },
                                        "authorized_accounts": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "notify_accounts": {
                                          "type": "array",
                                          "items": {
                                            "type": "string"
                                          }
                                        },
                                        "market_fee": {
                                          "type": "number"
                                        },
                                        "created_at_block": {
                                          "type": "string"
                                        },
                                        "created_at_time": {
                                          "type": "string"
                                        }
                                      }
                                    }
                                  }
                                },
                                "sales": {
                                  "type": "string"
                                },
                                "volume": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/stats/graph": {
        "get": {
          "tags": ["stats"],
          "summary": "Get history of volume and",
          "parameters": [
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "string"
                                },
                                "volume": {
                                  "type": "string"
                                },
                                "sales": {
                                  "type": "string"
                                },
                                "max": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/assets": {
        "get": {
          "tags": ["assets"],
          "summary": "Fetch assets.",
          "description": "You can filter the result by specific asset / template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
          "parameters": [
            {
              "name": "collection_name",
              "in": "query",
              "description": "Filter by collection name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Filter by schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Filter by template id",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "burned",
              "in": "query",
              "description": "Filter for burned assets",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "owner",
              "in": "query",
              "description": "Filter by owner",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match",
              "in": "query",
              "description": "Search for input in asset name on template data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Fuzzy search for input in asset name on template data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_immutable_name",
              "in": "query",
              "description": "Search for input in asset name on asset immutable data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_mutable_name",
              "in": "query",
              "description": "Search for input in asset name on asset mutable data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "is_transferable",
              "in": "query",
              "description": "Check if asset is transferable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "is_burnable",
              "in": "query",
              "description": "Check if asset is burnable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "only_duplicate_templates",
              "in": "query",
              "description": "Show only duplicate assets grouped by template",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "has_backed_tokens",
              "in": "query",
              "description": "Show only assets that are backed by a token",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "authorized_account",
              "in": "query",
              "description": "Filter for assets the provided account can edit. ",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_whitelist",
              "in": "query",
              "description": "Filter for multiple template ids split by \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_blacklist",
              "in": "query",
              "description": "Dont include specific template ids split by \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hide_templates_by_accounts",
              "in": "query",
              "description": "Dont templates that are owned by an account",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hide_offers",
              "in": "query",
              "description": "Hide assets which are used in an offer",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "asset_id",
                  "minted",
                  "updated",
                  "transferred",
                  "template_mint",
                  "name",
                  "suggested_median_price",
                  "suggested_average_price",
                  "median_price",
                  "average_price"
                ],
                "default": "asset_id"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ListingAsset"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/assets/{asset_id}/sales": {
        "get": {
          "tags": ["assets"],
          "summary": "Gets price history for a specific asset",
          "parameters": [
            {
              "in": "path",
              "name": "asset_id",
              "description": "Asset Id",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "buyer",
              "in": "query",
              "description": "Buyer",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "seller",
              "in": "query",
              "description": "Seller",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "symbol",
              "in": "query",
              "description": "Token symbol",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order by time",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "asc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "sale_id": {
                              "type": "string"
                            },
                            "auction_id": {
                              "type": "string"
                            },
                            "buyoffer_id": {
                              "type": "string"
                            },
                            "price": {
                              "type": "string"
                            },
                            "token_symbol": {
                              "type": "string"
                            },
                            "token_precision": {
                              "type": "integer"
                            },
                            "token_contract": {
                              "type": "string"
                            },
                            "seller": {
                              "type": "string"
                            },
                            "buyer": {
                              "type": "string"
                            },
                            "block_time": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/prices/sales": {
        "get": {
          "tags": ["pricing"],
          "summary": "Gets price history for a template or schema",
          "parameters": [
            {
              "name": "collection_name",
              "in": "query",
              "description": "Filter by collection name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Filter by schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Filter by template id",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "burned",
              "in": "query",
              "description": "Filter for burned assets",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "symbol",
              "in": "query",
              "description": "Token symbol",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "sale_id": {
                              "type": "string"
                            },
                            "auction_id": {
                              "type": "string"
                            },
                            "buyoffer_id": {
                              "type": "string"
                            },
                            "template_mint": {
                              "type": "string"
                            },
                            "price": {
                              "type": "string"
                            },
                            "token_symbol": {
                              "type": "string"
                            },
                            "token_precision": {
                              "type": "integer"
                            },
                            "token_contract": {
                              "type": "string"
                            },
                            "block_time": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/prices/sales/days": {
        "get": {
          "tags": ["pricing"],
          "summary": "Gets price history for a template or schema",
          "parameters": [
            {
              "name": "collection_name",
              "in": "query",
              "description": "Filter by collection name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Filter by schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Filter by template id",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "burned",
              "in": "query",
              "description": "Filter for burned assets",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "symbol",
              "in": "query",
              "description": "Token symbol",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "average": {
                              "type": "string"
                            },
                            "median": {
                              "type": "string"
                            },
                            "token_symbol": {
                              "type": "string"
                            },
                            "token_precision": {
                              "type": "integer"
                            },
                            "token_contract": {
                              "type": "string"
                            },
                            "time": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/prices/templates": {
        "get": {
          "tags": ["pricing"],
          "summary": "Get template price stats",
          "parameters": [
            {
              "name": "collection_name",
              "in": "query",
              "description": "Filter by collection name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Filter by schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Filter by template id",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "burned",
              "in": "query",
              "description": "Filter for burned assets",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "symbol",
              "in": "query",
              "description": "Token symbol",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "token_symbol": {
                              "type": "string"
                            },
                            "token_precision": {
                              "type": "integer"
                            },
                            "token_contract": {
                              "type": "string"
                            },
                            "collection_name": {
                              "type": "string"
                            },
                            "template_id": {
                              "type": "string"
                            },
                            "average": {
                              "type": "string"
                            },
                            "median": {
                              "type": "string"
                            },
                            "suggested_average": {
                              "type": "string"
                            },
                            "suggested_median": {
                              "type": "string"
                            },
                            "min": {
                              "type": "string"
                            },
                            "max": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/prices/assets": {
        "get": {
          "tags": ["pricing"],
          "summary": "Gets price history for a template or schema",
          "parameters": [
            {
              "name": "collection_name",
              "in": "query",
              "description": "Filter by collection name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Filter by schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Filter by template id",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "burned",
              "in": "query",
              "description": "Filter for burned assets",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "owner",
              "in": "query",
              "description": "Filter by owner",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match",
              "in": "query",
              "description": "Search for input in asset name on template data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Fuzzy search for input in asset name on template data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_immutable_name",
              "in": "query",
              "description": "Search for input in asset name on asset immutable data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_mutable_name",
              "in": "query",
              "description": "Search for input in asset name on asset mutable data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "is_transferable",
              "in": "query",
              "description": "Check if asset is transferable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "is_burnable",
              "in": "query",
              "description": "Check if asset is burnable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "authorized_account",
              "in": "query",
              "description": "Filter for assets the provided account can edit. ",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hide_offers",
              "in": "query",
              "description": "Hide assets which are used in an offer",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "token_symbol": {
                              "type": "string"
                            },
                            "token_precision": {
                              "type": "integer"
                            },
                            "token_contract": {
                              "type": "string"
                            },
                            "median": {
                              "type": "string"
                            },
                            "average": {
                              "type": "string"
                            },
                            "suggested_average": {
                              "type": "string"
                            },
                            "suggested_median": {
                              "type": "string"
                            },
                            "min": {
                              "type": "string"
                            },
                            "max": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftymarket/v1/prices/inventory/{account}": {
        "get": {
          "tags": ["pricing"],
          "summary": "Gets a users inventory value grouped by collection",
          "parameters": [
            {
              "name": "collection_name",
              "in": "query",
              "description": "Filter by collection name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "schema_name",
              "in": "query",
              "description": "Filter by schema name",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Filter by template id",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "burned",
              "in": "query",
              "description": "Filter for burned assets",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "match",
              "in": "query",
              "description": "Search for input in asset name on template data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "search",
              "in": "query",
              "description": "Fuzzy search for input in asset name on template data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_immutable_name",
              "in": "query",
              "description": "Search for input in asset name on asset immutable data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "match_mutable_name",
              "in": "query",
              "description": "Search for input in asset name on asset mutable data",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "is_transferable",
              "in": "query",
              "description": "Check if asset is transferable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "is_burnable",
              "in": "query",
              "description": "Check if asset is burnable",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "authorized_account",
              "in": "query",
              "description": "Filter for assets the provided account can edit. ",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hide_offers",
              "in": "query",
              "description": "Hide assets which are used in an offer",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "collections": [
                            {
                              "type": "object",
                              "properties": {
                                "collection": {
                                  "type": "string"
                                },
                                "prices": [
                                  {
                                    "token_symbol": {
                                      "type": "string"
                                    },
                                    "token_precision": {
                                      "type": "integer"
                                    },
                                    "token_contract": {
                                      "type": "string"
                                    },
                                    "median": {
                                      "type": "string"
                                    },
                                    "average": {
                                      "type": "string"
                                    },
                                    "suggested_average": {
                                      "type": "string"
                                    },
                                    "suggested_median": {
                                      "type": "string"
                                    },
                                    "min": {
                                      "type": "string"
                                    },
                                    "max": {
                                      "type": "string"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/config": {
        "get": {
          "tags": ["config"],
          "summary": "Get neftyblocks config",
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "neftydrops_contract": {
                            "type": "string"
                          },
                          "atomicassets_contract": {
                            "type": "string"
                          },
                          "delphioracle_contract": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          },
                          "drop_fee": {
                            "type": "number"
                          },
                          "supported_tokens": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "token_contract": {
                                  "type": "string"
                                },
                                "token_symbol": {
                                  "type": "string"
                                },
                                "token_precision": {
                                  "type": "integer"
                                }
                              }
                            }
                          },
                          "supported_pairs": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "listing_symbol": {
                                  "type": "string"
                                },
                                "settlement_symbol": {
                                  "type": "string"
                                },
                                "delphi_pair_name": {
                                  "type": "string"
                                },
                                "invert_delphi_pair": {
                                  "type": "boolean"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/drops": {
        "get": {
          "tags": ["drops"],
          "summary": "Get all drops. ",
          "description": "You can filter the result by specific template data fields.You can add for example &template_data.rarity=common to only receive results which have an attribute \"rarity\" with the value \"common\". You can query specific asset data by using &immutable_data.rarity=common or &mutable_data.rarity=common .If you want to query a non text type you need to specify it explicitly (defaults to text type) like data:bool.foil=true or data:number.id=4 or data:text.rarity=common. Integers which are defined greater than 32 bit (eg 64 bit) in the schema need to be queried as text.",
          "parameters": [
            {
              "name": "state",
              "in": "query",
              "description": "Filter by drop state (0: ACTIVE - The drop is active, 1: DELETED - The drop is deleted2: SOLD_OUT - The drop is sold out3: SOLD_OUT - The drop is ended) - separate multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "hidden",
              "in": "query",
              "description": "Display hidden drops",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "ids",
              "in": "query",
              "description": "seperate multiple ids with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "lower_bound",
              "in": "query",
              "description": "lower bound of primary key (value included)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "upper_bound",
              "in": "query",
              "description": "upper bound of primary key (value excluded)",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "min_assets",
              "in": "query",
              "description": "Min assets per drop",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "max_assets",
              "in": "query",
              "description": "Max assets per drop",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "template_id",
              "in": "query",
              "description": "Template id in the drop",
              "required": false,
              "schema": {
                "type": "int"
              }
            },
            {
              "name": "symbol",
              "in": "query",
              "description": "Filter by symbol",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "min_price",
              "in": "query",
              "description": "Lower price limit",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "max_price",
              "in": "query",
              "description": "Upper price limit",
              "required": false,
              "schema": {
                "type": "number"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": [
                  "created",
                  "updated",
                  "drop_id",
                  "price",
                  "start_time",
                  "end_time"
                ],
                "default": "created"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Drop"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/drops/{drop_id}": {
        "get": {
          "tags": ["drops"],
          "summary": "Get a specific drop by id",
          "parameters": [
            {
              "in": "path",
              "name": "drop_id",
              "description": "Drop Id",
              "required": true,
              "schema": {
                "type": "integer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "$ref": "#/components/schemas/Drop"
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "416": {
              "description": "Element not found",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/drops/{drop_id}/claims": {
        "get": {
          "tags": ["drops"],
          "summary": "Fetch drop claims",
          "parameters": [
            {
              "name": "drop_id",
              "in": "path",
              "description": "ID of drop",
              "required": true,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["claim_time", "price", "amount", "claimer"],
                "default": "claim_time"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/Claim"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/stats/collections": {
        "get": {
          "tags": ["stats"],
          "summary": "Get market collections sorted by volume or sales",
          "parameters": [
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only sales after this time",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only sales before this time",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["volume", "sales"],
                "default": "volume"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": "object",
                                "properties": {
                                  "contract": {
                                    "type": "string"
                                  },
                                  "collection_name": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "author": {
                                    "type": "string"
                                  },
                                  "allow_notify": {
                                    "type": "boolean"
                                  },
                                  "authorized_accounts": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "notify_accounts": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "market_fee": {
                                    "type": "number"
                                  },
                                  "data": {
                                    "type": "object"
                                  },
                                  "created_at_block": {
                                    "type": "string"
                                  },
                                  "created_at_time": {
                                    "type": "string"
                                  }
                                },
                                "volume": {
                                  "type": "string"
                                },
                                "sales": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/stats/collections/{collection_name}": {
        "get": {
          "tags": ["stats"],
          "summary": "Get market collections sorted by volume or sales",
          "parameters": [
            {
              "name": "collection_name",
              "in": "path",
              "description": "Collection Name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "result": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "type": "object",
                                "properties": {
                                  "contract": {
                                    "type": "string"
                                  },
                                  "collection_name": {
                                    "type": "string"
                                  },
                                  "name": {
                                    "type": "string"
                                  },
                                  "author": {
                                    "type": "string"
                                  },
                                  "allow_notify": {
                                    "type": "boolean"
                                  },
                                  "authorized_accounts": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "notify_accounts": {
                                    "type": "array",
                                    "items": {
                                      "type": "string"
                                    }
                                  },
                                  "market_fee": {
                                    "type": "number"
                                  },
                                  "data": {
                                    "type": "object"
                                  },
                                  "created_at_block": {
                                    "type": "string"
                                  },
                                  "created_at_time": {
                                    "type": "string"
                                  }
                                },
                                "volume": {
                                  "type": "string"
                                },
                                "sales": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/stats/accounts": {
        "get": {
          "tags": ["stats"],
          "summary": "Get market collections sorted by volume or sales",
          "parameters": [
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only sales after this time",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "before",
              "in": "query",
              "description": "Only sales before this time",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["buy_volume", "sell_volume"],
                "default": "buy_volume"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "account": {
                                  "type": "string"
                                },
                                "buy_volume": {
                                  "type": "string"
                                },
                                "sell_volume": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/stats/accounts/{account}": {
        "get": {
          "tags": ["stats"],
          "summary": "Get collections sorted by volume",
          "parameters": [
            {
              "name": "account",
              "in": "path",
              "description": "Account Name",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "result": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "account": {
                                  "type": "string"
                                },
                                "buy_volume": {
                                  "type": "string"
                                },
                                "sell_volume": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/stats/graph": {
        "get": {
          "tags": ["stats"],
          "summary": "Get history of volume",
          "parameters": [
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "results": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "time": {
                                  "type": "string"
                                },
                                "volume": {
                                  "type": "string"
                                },
                                "sales": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/stats/sales": {
        "get": {
          "tags": ["stats"],
          "summary": "Get total sales and volume",
          "parameters": [
            {
              "name": "symbol",
              "in": "query",
              "description": "Token Symbol",
              "required": true,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_blacklist",
              "in": "query",
              "description": "Hide collections from result. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "collection_whitelist",
              "in": "query",
              "description": "Show only results from specific collections. Split multiple with \",\"",
              "required": false,
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "only_whitelisted",
              "in": "query",
              "description": "Show only whitelisted collections",
              "required": false,
              "schema": {
                "type": "boolean"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "object",
                        "properties": {
                          "symbol": {
                            "type": "object",
                            "properties": {
                              "token_contract": {
                                "type": "string"
                              },
                              "token_symbol": {
                                "type": "string"
                              },
                              "token_precision": {
                                "type": "integer"
                              }
                            }
                          },
                          "results": {
                            "type": "object",
                            "properties": {
                              "volume": {
                                "type": "string"
                              },
                              "sales": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/mining/collections": {
        "get": {
          "tags": ["mining"],
          "summary": "Get sellers NCO and Social Tokens equivalent balance between given period.",
          "description": "Get sellers NCO and Social Tokens equivalent balance between given period.",
          "parameters": [
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["collection_name", "sold_wax", "sold_nefty"],
                "default": "collection_name"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/CollectionsBalance"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/neftydrops/v1/mining/claimers": {
        "get": {
          "tags": ["mining"],
          "summary": "Get buyers NCO and Social Tokens equivalent balance between given period.",
          "description": "Get buyers NCO and Social Tokens equivalent balance between given period.",
          "parameters": [
            {
              "name": "before",
              "in": "query",
              "description": "Only show results before this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "after",
              "in": "query",
              "description": "Only show results after this timestamp in milliseconds (value excluded)",
              "required": false,
              "schema": {
                "type": "integer"
              }
            },
            {
              "name": "page",
              "in": "query",
              "description": "Result Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 1
              }
            },
            {
              "name": "limit",
              "in": "query",
              "description": "Results per Page",
              "required": false,
              "schema": {
                "type": "integer",
                "default": 100
              }
            },
            {
              "name": "order",
              "in": "query",
              "description": "Order direction",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["asc", "desc"],
                "default": "desc"
              }
            },
            {
              "name": "sort",
              "in": "query",
              "description": "Column to sort",
              "required": false,
              "schema": {
                "type": "string",
                "enum": ["claimer", "spent_wax", "spent_nefty"],
                "default": "claimer"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": true
                      },
                      "data": {
                        "type": "array",
                        "items": {
                          "$ref": "#/components/schemas/ClaimersBalance"
                        }
                      },
                      "query_time": {
                        "type": "integer",
                        "nullable": true
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal Server Error",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "properties": {
                      "success": {
                        "type": "boolean",
                        "default": false
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "components": {
      "schemas": {
        "Log": {
          "type": "object",
          "properties": {
            "log_id": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "data": {
              "type": "object"
            },
            "txid": {
              "type": "string"
            },
            "created_at_block": {
              "type": "string"
            },
            "created_at_time": {
              "type": "string"
            }
          }
        },
        "Asset": {
          "type": "object",
          "properties": {
            "contract": {
              "type": "string"
            },
            "asset_id": {
              "type": "string"
            },
            "owner": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "is_transferable": {
              "type": "boolean"
            },
            "is_burnable": {
              "type": "boolean"
            },
            "template_mint": {
              "type": "string"
            },
            "collection": {
              "type": "object",
              "properties": {
                "collection_name": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "author": {
                  "type": "string"
                },
                "allow_notify": {
                  "type": "boolean"
                },
                "authorized_accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "notify_accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "market_fee": {
                  "type": "number"
                },
                "created_at_block": {
                  "type": "string"
                },
                "created_at_time": {
                  "type": "string"
                }
              }
            },
            "schema": {
              "type": "object",
              "properties": {
                "schema_name": {
                  "type": "string"
                },
                "format": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "created_at_block": {
                  "type": "string"
                },
                "created_at_time": {
                  "type": "string"
                }
              }
            },
            "template": {
              "type": "object",
              "properties": {
                "template_id": {
                  "type": "string"
                },
                "max_supply": {
                  "type": "string"
                },
                "issued_supply": {
                  "type": "string"
                },
                "is_transferable": {
                  "type": "boolean"
                },
                "is_burnable": {
                  "type": "boolean"
                },
                "immutable_data": {
                  "type": "object"
                },
                "created_at_time": {
                  "type": "string"
                },
                "created_at_block": {
                  "type": "string"
                }
              }
            },
            "backed_tokens": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "token_contract": {
                    "type": "string"
                  },
                  "token_symbol": {
                    "type": "string"
                  },
                  "token_precision": {
                    "type": "integer"
                  },
                  "amount": {
                    "type": "string"
                  }
                }
              }
            },
            "immutable_data": {
              "type": "object"
            },
            "mutable_data": {
              "type": "object"
            },
            "data": {
              "type": "object"
            },
            "burned_by_account": {
              "type": "string"
            },
            "burned_at_block": {
              "type": "string"
            },
            "burned_at_time": {
              "type": "string"
            },
            "updated_at_block": {
              "type": "string"
            },
            "updated_at_time": {
              "type": "string"
            },
            "transferred_at_block": {
              "type": "string"
            },
            "transferred_at_time": {
              "type": "string"
            },
            "minted_at_block": {
              "type": "string"
            },
            "minted_at_time": {
              "type": "string"
            }
          }
        },
        "Collection": {
          "type": "object",
          "properties": {
            "contract": {
              "type": "string"
            },
            "collection_name": {
              "type": "string"
            },
            "name": {
              "type": "string"
            },
            "author": {
              "type": "string"
            },
            "allow_notify": {
              "type": "boolean"
            },
            "authorized_accounts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "notify_accounts": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "market_fee": {
              "type": "number"
            },
            "data": {
              "type": "object"
            },
            "created_at_block": {
              "type": "string"
            },
            "created_at_time": {
              "type": "string"
            }
          }
        },
        "Schema": {
          "type": "object",
          "properties": {
            "contract": {
              "type": "string"
            },
            "schema_name": {
              "type": "string"
            },
            "format": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  },
                  "type": {
                    "type": "string"
                  }
                }
              }
            },
            "created_at_block": {
              "type": "string"
            },
            "created_at_time": {
              "type": "string"
            },
            "collection": {
              "type": "object",
              "properties": {
                "collection_name": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "author": {
                  "type": "string"
                },
                "allow_notify": {
                  "type": "boolean"
                },
                "authorized_accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "notify_accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "market_fee": {
                  "type": "number"
                },
                "created_at_block": {
                  "type": "string"
                },
                "created_at_time": {
                  "type": "string"
                }
              }
            }
          }
        },
        "Template": {
          "type": "object",
          "properties": {
            "contract": {
              "type": "string"
            },
            "template_id": {
              "type": "string"
            },
            "max_supply": {
              "type": "string"
            },
            "issued_supply": {
              "type": "string"
            },
            "is_transferable": {
              "type": "boolean"
            },
            "is_burnable": {
              "type": "boolean"
            },
            "immutable_data": {
              "type": "object"
            },
            "created_at_time": {
              "type": "string"
            },
            "created_at_block": {
              "type": "string"
            },
            "scheme": {
              "type": "object",
              "properties": {
                "schema_name": {
                  "type": "string"
                },
                "format": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "type": {
                        "type": "string"
                      }
                    }
                  }
                },
                "created_at_block": {
                  "type": "string"
                },
                "created_at_time": {
                  "type": "string"
                }
              }
            },
            "collection": {
              "type": "object",
              "properties": {
                "collection_name": {
                  "type": "string"
                },
                "name": {
                  "type": "string"
                },
                "author": {
                  "type": "string"
                },
                "allow_notify": {
                  "type": "boolean"
                },
                "authorized_accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "notify_accounts": {
                  "type": "array",
                  "items": {
                    "type": "string"
                  }
                },
                "market_fee": {
                  "type": "number"
                },
                "created_at_block": {
                  "type": "string"
                },
                "created_at_time": {
                  "type": "string"
                }
              }
            }
          }
        },
        "Offer": {
          "type": "object",
          "properties": {
            "contract": {
              "type": "string"
            },
            "offer_id": {
              "type": "string"
            },
            "sender_name": {
              "type": "string"
            },
            "recipient_name": {
              "type": "string"
            },
            "memo": {
              "type": "string"
            },
            "state": {
              "type": "integer"
            },
            "is_sender_contract": {
              "type": "boolean"
            },
            "is_recipient_contract": {
              "type": "boolean"
            },
            "sender_assets": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Asset"
              }
            },
            "recipient_assets": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Asset"
              }
            },
            "updated_at_block": {
              "type": "string"
            },
            "updated_at_time": {
              "type": "string"
            },
            "created_at_block": {
              "type": "string"
            },
            "created_at_time": {
              "type": "string"
            }
          }
        },
        "Transfer": {
          "type": "object",
          "properties": {
            "contract": {
              "type": "string"
            },
            "transfer_id": {
              "type": "string"
            },
            "sender_name": {
              "type": "string"
            },
            "recipient_name": {
              "type": "string"
            },
            "memo": {
              "type": "string"
            },
            "assets": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Asset"
              }
            },
            "created_at_block": {
              "type": "string"
            },
            "created_at_time": {
              "type": "string"
            }
          }
        },
        "AttributeValueFilter": {
          "type": "object",
          "properties": {
            "key": {
              "type": "string"
            },
            "value": {
              "type": "string"
            }
          }
        },
        "Drop": {},
        "Claim": {},
        "CollectionsBalance": {},
        "ClaimersBalance": {},
        "SellersBalance": {},
        "BuyersBalance": {}
      }
    }
  },
  "customOptions": {}
}
